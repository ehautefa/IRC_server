╔══╗╔═══╗╔═══╗		╔════╗		  ╔╗		╔╗        ╔╗ 
╚╣╠╝║╔═╗║║╔═╗║		║╔╗╔╗║		  ║║		║║       ╔╝╚╗
 ║║ ║╚═╝║║║ ╚╝	╔╗	╚╝║║╚╝╔══╗	╔═╝║╔══╗	║║ ╔╗╔══╗╚╗╔╝
 ║║ ║╔╗╔╝║║ ╔╗	╚╝	  ║║  ║╔╗║	║╔╗║║╔╗║	║║ ╠╣║══╣ ║║ 
╔╣╠╗║║║╚╗║╚═╝║	╔╗	 ╔╝╚╗ ║╚╝║	║╚╝║║╚╝║	║╚╗║║╠══║ ║╚╗
╚══╝╚╝╚═╝╚═══╝	╚╝	 ╚══╝ ╚══╝	╚══╝╚══╝	╚═╝╚╝╚══╝ ╚═╝
																							  
		   
✅ FAIT ❌ PAS COMMENCÉ 🔘 EN COURS

BUG
	❌ 	Resolve segfault when deconnecting one user and reconnecting
	✅	double message when sending a message to a channel
	❌	Irssi: Join to #C was synced in 552 secs
	❌	Part echoue des fois
	❌	topic not operator always




❌ END
	✅	Handling multiple clients at the same time										
	✅	Authentification								
	✅	Set a Nickname
	✅	Set a username
	✅	Join a channel
	✅	Send a private msg
	✅	Receive a private msg
	❌ 	Test with NC

COMMAND :
	✅	PASS :
	✅	NICK :
	✅	USER :
	✅	PING :
	✅	PONG :
	✅	CONNECT :
		CONNECT <target server> [<port> [<remote server>]] (RFC 1459)
		CONNECT <target server> <port> [<remote server>] (RFC 2812)
			Instructs the server <remote server> (or the current server, if <remote server> is omitted) to connect to <target server> on port <port>.[3][4] This command should only be available to IRC operators. Defined in RFC 1459; the <port> parameter became mandatory in RFC 2812.
	✅	DIE :
		DIE
			Instructs the server to shut down.[5] This command may only be issued by IRC server operators. Defined in RFC 2812.
	✅	NICK : 
		NICK <nickname> [<hopcount>] (RFC 1459)
		NICK <nickname> (RFC 2812)
			Allows a client to change their IRC nickname. Hopcount is for use between servers to specify how far away a nickname is from its home server.[23][24] Defined in RFC 1459; the optional <hopcount> parameter was removed in RFC 2812. 
	✅	OPER : 
		OPER <username> <password>
			Authenticates a user as an IRC operator on that server/network.[26] Defined in RFC 1459. 
	✅	PART : 
		PART <channels> [<message>]
			Causes a user to leave the channels in the comma-separated list <channels>.[27] Defined in RFC 14
	✅	JOIN : 
		JOIN <channels> [<keys>]
			Makes the client join the channels in the comma-separated list <channels>, specifying the passwords, if needed, in the comma-separated list <keys>.[11] If the channel(s) do not exist then they will be created. Defined in RFC 1459.
	✅	LIST : 
		LIST [<channels> [<server>]]
			Lists all channels on the server.[15] If the comma-separated list <channels> is given, it will return the channel topics. If <server> is given, the command will be forwarded to <server> for evaluation. Defined in RFC 1459. 
	✅	WHOIS :
	✅	PRIVMSG : 
		PRIVMSG <msgtarget> :<message>
			Sends <message> to <msgtarget>, which is usually a user or channel.[31] Defined in RFC 1459. 
	✅	MOTD :
	✅	NOTICE :
	✅	NAMES :
	✅	INVITE : 
		INVITE <nickname> <channel>
			Invites <nickname> to the channel <channel>.[9] <channel> does not have to exist, but if it does, only members of the channel are allowed to invite other clients. If the channel mode i is set, only channel operators may invite other clients. Defined in RFC 1459. 
	✅	QUIT : Gerer par irssi
	🔘	MODE :
	🔘	TOPIC :
		QUIT [<message>]
			Disconnects the user from the server.[32] Defined in RFC 14
	❌	KICK :
		KICK <channel> <client> :[<message>]
			Forcibly removes <client> from <channel>.[12] This command may only be issued by channel operators. Defined in RFC 1459. 
	❌	KILL : 
		KILL <client> <comment>
			Forcibly removes <client> from the network.[13] This command may only be issued by IRC operators. Defined in RFC 1459. 


USER MODES :
	❌	i : invisible
	❌	o : operator

CHANNEL MODES : 
for users : 
	❌	O : channel creator
	❌	o : channel operator 
	❌	v : voice 
for channels : 
	❌	i : invite only
	❌	m : moderated