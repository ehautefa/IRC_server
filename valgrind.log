==708164== Memcheck, a memory error detector
==708164== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==708164== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==708164== Command: ./ircserv 6667 p
==708164== Parent PID: 708156
==708164== 
==708164== 
==708164== Process terminating with default action of signal 2 (SIGINT)
==708164==    at 0x4CC3997: poll (poll.c:29)
==708164==    by 0x413782: Server::server_loop() (Server.cpp:545)
==708164==    by 0x403E42: main (in /mnt/nfs/homes/ehautefa/Desktop/ircserver/ircserv)
==708164== 
==708164== FILE DESCRIPTORS: 5 open at exit.
==708164== Open AF_INET socket 4: 0.0.0.0:6667 <-> unbound
==708164==    at 0x4CD17DB: socket (syscall-template.S:78)
==708164==    by 0x403880: init_socket(char*) (in /mnt/nfs/homes/ehautefa/Desktop/ircserver/ircserv)
==708164==    by 0x403D80: main (in /mnt/nfs/homes/ehautefa/Desktop/ircserver/ircserv)
==708164== 
==708164== Open file descriptor 3: /mnt/nfs/homes/ehautefa/Desktop/ircserver/valgrind.log
==708164==    <inherited from parent>
==708164== 
==708164== Open file descriptor 2: /dev/pts/0
==708164==    <inherited from parent>
==708164== 
==708164== Open file descriptor 1: /dev/pts/0
==708164==    <inherited from parent>
==708164== 
==708164== Open file descriptor 0: /dev/pts/0
==708164==    <inherited from parent>
==708164== 
==708164== 
==708164== HEAP SUMMARY:
==708164==     in use at exit: 224 bytes in 2 blocks
==708164==   total heap usage: 131 allocs, 129 frees, 96,152 bytes allocated
==708164== 
==708164== 16 bytes in 1 blocks are still reachable in loss record 1 of 2
==708164==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==708164==    by 0x4190E6: __gnu_cxx::new_allocator<pollfd>::allocate(unsigned long, void const*) (new_allocator.h:115)
==708164==    by 0x419090: __gnu_cxx::__alloc_traits<std::allocator<pollfd>, pollfd>::allocate(std::allocator<pollfd>&, unsigned long) (alloc_traits.h:133)
==708164==    by 0x41904F: std::_Vector_base<pollfd, std::allocator<pollfd> >::_M_allocate(unsigned long) (stl_vector.h:346)
==708164==    by 0x41BB4B: std::vector<pollfd, std::allocator<pollfd> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, pollfd const&) (vector.tcc:440)
==708164==    by 0x41550C: std::vector<pollfd, std::allocator<pollfd> >::push_back(pollfd const&) (stl_vector.h:1198)
==708164==    by 0x413946: Server::server_loop() (Server.cpp:559)
==708164==    by 0x403E42: main (in /mnt/nfs/homes/ehautefa/Desktop/ircserver/ircserv)
==708164== 
==708164== 208 bytes in 1 blocks are still reachable in loss record 2 of 2
==708164==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==708164==    by 0x41C946: __gnu_cxx::new_allocator<User>::allocate(unsigned long, void const*) (new_allocator.h:115)
==708164==    by 0x41C8F0: __gnu_cxx::__alloc_traits<std::allocator<User>, User>::allocate(std::allocator<User>&, unsigned long) (alloc_traits.h:133)
==708164==    by 0x41C75F: std::_Vector_base<User, std::allocator<User> >::_M_allocate(unsigned long) (stl_vector.h:346)
==708164==    by 0x41C34B: std::vector<User, std::allocator<User> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<User*, std::vector<User, std::allocator<User> > >, User const&) (vector.tcc:440)
==708164==    by 0x41560F: std::vector<User, std::allocator<User> >::push_back(User const&) (stl_vector.h:1198)
==708164==    by 0x4139F6: Server::server_loop() (Server.cpp:562)
==708164==    by 0x403E42: main (in /mnt/nfs/homes/ehautefa/Desktop/ircserver/ircserv)
==708164== 
==708164== LEAK SUMMARY:
==708164==    definitely lost: 0 bytes in 0 blocks
==708164==    indirectly lost: 0 bytes in 0 blocks
==708164==      possibly lost: 0 bytes in 0 blocks
==708164==    still reachable: 224 bytes in 2 blocks
==708164==         suppressed: 0 bytes in 0 blocks
==708164== 
==708164== For lists of detected and suppressed errors, rerun with: -s
==708164== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
